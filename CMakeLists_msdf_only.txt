cmake_minimum_required(VERSION 3.15)
project(MSDFTextRenderer VERSION 1.0.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find required packages
find_package(OpenGL REQUIRED)
find_package(PkgConfig REQUIRED)

# Find FreeType
pkg_check_modules(FREETYPE REQUIRED freetype2)
if(NOT FREETYPE_FOUND)
    message(FATAL_ERROR "FreeType2 is required but not found. Please install libfreetype6-dev (Ubuntu) or freetype-devel (CentOS)")
endif()

# Find GLFW
find_package(glfw3 REQUIRED)
if(NOT glfw3_FOUND)
    message(FATAL_ERROR "GLFW3 is required but not found. Please install libglfw3-dev (Ubuntu) or glfw-devel (CentOS)")
endif()

# MSDF Text Renderer Library
add_library(MSDFTextRenderer STATIC
    src/text/TextRenderer.h
    src/text/TextRenderer.cpp
    src/text/MSDFGenerator.h
    src/text/MSDFGenerator.cpp
    src/text/AtlasPacker.h
    src/text/AtlasPacker.cpp
)

target_include_directories(MSDFTextRenderer PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/src
    ${FREETYPE_INCLUDE_DIRS}
)

target_link_libraries(MSDFTextRenderer PUBLIC
    OpenGL::GL
    ${FREETYPE_LIBRARIES}
)

target_compile_definitions(MSDFTextRenderer PUBLIC
    GLM_FORCE_RADIANS
    GLM_FORCE_DEPTH_ZERO_TO_ONE
)

# Text Demo
add_executable(TEXT_DEMO
    demo/text_demo.cpp
)

target_link_libraries(TEXT_DEMO PRIVATE
    MSDFTextRenderer
    glfw
    ${FREETYPE_LIBRARIES}
)

target_include_directories(TEXT_DEMO PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${FREETYPE_INCLUDE_DIRS}
)

# Copy shaders to build directory
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/shaders DESTINATION ${CMAKE_BINARY_DIR})

# Print configuration summary
message(STATUS "")
message(STATUS "MSDF Text Renderer Configuration:")
message(STATUS "  FreeType: ${FREETYPE_VERSION}")
message(STATUS "  OpenGL: ${OPENGL_VERSION}")
message(STATUS "  GLFW: ${GLFW_VERSION}")
message(STATUS "")